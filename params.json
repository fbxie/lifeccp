{
  "name": "Lifeccp",
  "tagline": "Cloud-based Collaborative PACS (Picture Archiving and Communication Systems) blog project",
  "body": "# Life on CCP\r\nThis project is submitted to [Eclipse Open IoT Challenge 3.0](https://iot.eclipse.org/open-iot-challenge/)\r\n![OPEN IOT CHALLENGE 3.0](https://iot.eclipse.org/open-iot-challenge/images/iot-challenge-3-promo.png)\r\n\r\n## What is CCP\r\nCCP stands for Cloud-based Collaborative PACS (Picture Archiving and Communication Systems). A picture archiving and communication system (PACS) is a medical imaging technology which provides economical storage and convenient access to images from multiple modalities (source machine types)[wiki](https://en.wikipedia.org/wiki/Picture_archiving_and_communication_system). Traditionally PACS were intranet based and using expensive enterprise storage from EMC alike vendors. We're trying to put the medical images on the cloud and make it possible for radiologists and other practitioners in different physical locations to access the same information simultaneously. The emerging IoT and mobile technology enable us to link the modalities (medical imaging equipment) in the primary hospitals at outlying mountain villages in China and upload the pictures to the cloud. Through our online platform, experienced radiologists working in best hospitals in developed cities such as Beijing, Shanghai can make diagnosis remotely and help primary physicians and patients in developing regions.\r\n\r\n## Technical challenges\r\nPrimary hospitals realities: Limited resources such as computers and broadband connection, lack of IT professionals \r\n\r\n## Our approach\r\nWe're building a device based on Raspberry PI 3 Model B and developing related software. We call the device \"WingspanBox\". This box is functioning as a gateway to link the modalities and the cloud. A 4G wireless communication module is integrated into the box in case there's no broadband connection in the primary hospital. A camera module is optional and could be used to capture application forms. _MQTT_ is chosen as the messaging protocol and _Paho_ as the client implementation. We're considering if _Kura_ could manage our boxes.\r\n\r\n![LifeCCP Topology](/lifeccp/images/lifeccp-top1.png)",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}